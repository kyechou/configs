################################################################################
#
#   wm independent hotkeys
#
################################################################################

# make sxhkd reload its configuration files:
alt + ctrl + r
    pkill -USR1 -x sxhkd

# program launcher
alt + d
    rofi -no-lazy-grab -show drun -modi drun
alt + x
    rofi -no-lazy-grab -show combi -modi combi -combi-modi window,drun,run,ssh

# pass password manager
alt + p
    ~/.config/rofi/passmenu.sh --type -no-lazy-grab -i -p "pass" -no-custom

# dunst notification daemon
ctrl + @space
    dunstctl close
ctrl + Return
    dunstctl history-pop

# power, session management
alt + End ; l
    i3lock -ec 111111
alt + End ; e
    bspc quit
alt + End ; {s,h}
    i3lock -ec 111111 && systemctl {suspend,hibernate}
alt + End ; {r,p}
    systemctl {reboot,poweroff}

# keyboard and mouse config
## delay: 400 ms, rate: 35 hits/sec
## acceleration: 0, threshold: 0
ctrl + F1
    xset r rate 400 35; \
    xset mouse 0 0
ctrl + F2
    setxkbmap -option ctrl:nocaps

# touchpad
ctrl + {F3,F4}
    devname="$(xinput list --name-only | grep -i touchpad | head -n1)"; \
    xinput {disable,enable} "$devname"

# screen backlight
ctrl + {F5,F6}
    light -{U,A} 3

# audio
alt + {period,comma}
    pactl set-sink-volume @DEFAULT_SINK@ {+2%,-2%}
alt + m
    pactl set-sink-mute @DEFAULT_SINK@ toggle
alt + shift + {period,comma}
    pactl set-source-volume @DEFAULT_SOURCE@ {+2%,-2%}
alt + shift + m
    pactl set-source-mute @DEFAULT_SOURCE@ toggle

# program shortcuts
alt + Return
    alacritty
alt + ctrl + a
    ferdium --ozone-platform-hint=auto --enable-features=WaylandWindowDecorations --enable-webrtc-pipewire-capturer
alt + ctrl + b
    firefox
alt + ctrl + c
    speedcrunch
alt + ctrl + f
    alacritty --class nnn -t nnn -e nnn
alt + ctrl + m
    thunderbird
alt + ctrl + n
    alacritty --class newsboat -t newsboat -e newsboat
alt + ctrl + p
    ~/.config/polybar/launch.sh
alt + ctrl + s
    spotify
alt + ctrl + v
    virt-manager
alt + shift + ctrl + l
    /usr/bin/google-chrome-stable --app=chrome-extension://ophjlpahpchlmihnnnihgmmeilfjmjjc/index.html
Print
    flameshot gui

################################################################################
#
#   bspwm hotkeys
#
################################################################################

# restart bspwm
alt + ctrl + shift + r
    bspc wm --restart

# reset monitor
alt + ctrl + shift + m
    ~/.config/bspwm/reset-monitor.sh

# close and kill windows
alt + ctrl + {_,shift + }q
    bspc node --{close,kill}

# set the window state
alt + e
    if bspc query -T -d | grep '"layout":"monocle"' >/dev/null; then \
        bspc desktop --layout tiled; \
    else \
        bspc node --state tiled; \
    fi
alt + shift + e
    if bspc query -T -n | grep '"state":"pseudo_tiled"' >/dev/null; then \
        bspc node --state tiled; \
    else \
        bspc node --state pseudo_tiled; \
    fi
alt + @space
    if bspc query -T -n | grep '"state":"floating"' >/dev/null; then \
        bspc node --state tiled; \
    else \
        bspc node --state floating; \
    fi
alt + f
    if bspc query -T -n | grep '"state":"fullscreen"' >/dev/null; then \
        bspc node --state tiled; \
    else \
        bspc node --state fullscreen; \
    fi

# alternate between the tiled and monocle layout
alt + w
    bspc desktop --layout monocle

#
# focus/swap
#

# focus the node in the given direction
alt + {j,k}
    bspc node --focus {south,north}
alt + h
    if bspc query -T -d | grep '"layout":"monocle"' >/dev/null; then \
        bspc node --focus prev.local.leaf; \
    else \
        bspc node --focus west; \
    fi
alt + l
    if bspc query -T -d | grep '"layout":"monocle"' >/dev/null; then \
        bspc node --focus next.local.leaf; \
    else \
        bspc node --focus east; \
    fi

# swap/move the node in the given direction
alt + ctrl + h
    if bspc query -T -n | grep '"state":"floating"' >/dev/null; then \
        bspc node --move -20 0; \
    elif bspc query -T -d | grep '"layout":"monocle"' >/dev/null; then \
        bspc node --swap prev.local.leaf; \
    else \
        bspc node --swap west; \
    fi
alt + ctrl + j
    if bspc query -T -n | grep '"state":"floating"' >/dev/null; then \
        bspc node --move 0 20; \
    else \
        bspc node --swap south; \
    fi
alt + ctrl + k
    if bspc query -T -n | grep '"state":"floating"' >/dev/null; then \
        bspc node --move 0 -20; \
    else \
        bspc node --swap north; \
    fi
alt + ctrl + l
    if bspc query -T -n | grep '"state":"floating"' >/dev/null; then \
        bspc node --move 20 0; \
    elif bspc query -T -d | grep '"layout":"monocle"' >/dev/null; then \
        bspc node --swap next.local.leaf; \
    else \
        bspc node --swap east; \
    fi

# focus or send to the given desktop
alt + {_,ctrl + }{1-9,0}
    bspc {desktop --focus,node --to-desktop} '^{1-9,10}'

# focus the node for the given path jump
alt + {a,b,c,shift + c}
    bspc node --focus @{parent,brother,first,second}

# focus the next/previous desktop in the current monitor
alt + bracket{left,right}
    bspc desktop --focus {prev,next}.occupied.local
alt + shift + bracket{left,right}
    bspc desktop --focus {prev,next}.local

# send the node to the next/previous desktop in the current monitor
alt + ctrl + bracket{left,right}
    bspc node --to-desktop {prev,next}.local

# bubble up/down the current desktop with the next/previous desktop in the
# current monitor
alt + ctrl + shift + bracket{left,right}
    bspc desktop --bubble {prev,next}

# focus the last node/desktop
alt + grave
    bspc node --focus last.leaf
alt + Tab
    bspc desktop --focus last.occupied

# focus the older or newer node in the focus history
alt + {o,i}
    bspc wm -h off; \
    bspc node {older,newer}.leaf --focus; \
    bspc wm -h on

#
# resize
#

# expand a window by moving one of its side outward
alt + shift + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
#alt + super + shift + {h,j,k,l}
#    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# balance the nodes ratio in the current desktop
alt + ctrl + shift + b
    bspc node @/ --balance

# equalize the nodes ratio in the current desktop
alt + ctrl + shift + e
    bspc node @/ --equalize

#
# rotate
#
alt + {_,shift + }r
    bspc node @parent -R {90,270}
